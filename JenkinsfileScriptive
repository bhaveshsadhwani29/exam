node {
	def mvnHome

	stage('Preparation') {
		mvnHome = tool 'prac4maven'
	}

	stage('Compile') {
		withEnv(["MVN_HOME=$mvnHome"]) {
			if (isUnix()) {
				sh '"$MVN_HOME/bin/mvn" clean compile'
			} 
			else {
				bat(/"%MVN_HOME%\bin\mvn" clean compile/)
			}
		}
	}

	
	try {
		stage('Test') {
			withEnv(["MVN_HOME=$mvnHome"]) {
				if (isUnix()) {
					sh '"$MVN_HOME/bin/mvn" test'
				} 
				else {
					bat(/"%MVN_HOME%\bin\mvn" test/)
				}
			}
		}

		stage('Build') {
			withEnv(["MVN_HOME=$mvnHome"]) {
				if (isUnix()) {
					sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
				} 
				else {
					bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
				}
			}
		}
	}
	catch (e) {
		echo "$e (test failed) Building Unstable Version"
		
		withEnv(["MVN_HOME=$mvnHome"]) {
			if (isUnix()) {
				sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
			} 
			else {
				bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
			}
		}

		throw e
	}
}
